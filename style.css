/* CSS pour mobile first: Le mobile first est une stratégie de marketing qui consiste à se concentrer en priorité sur la réalisation de contenus à destination des utilisateurs d'appareils mobiles. */

/* *********************************** Base ************************************* */

/* l'étoile ==> Permet d'enlever toutes les valeurs par défaults des navigateurs==> reset. */
*{
    box-sizing: border-box;
}

html{
    font-size: 62.5%;/* Permet de redéfinir la font-size de base à 10px, pour n'importe quel navigateur. C'est une valeur fixe à laquelle on peut se baser.*/
}

body {
    font-family: Verdana, Geneva, Tahoma, sans-serif;
    font-size: 1.6rem;/* est égale à environ 16px */
    color:#555;
    margin: 0; /* pour reset la valeur par default */
    text-align: center;
}

h1, h2, h3, h4, h5, h6{
    color: #333;
}

/* décoration des liens */
a {
    text-decoration: none;
}

.list-unstyled{
    list-style: none;
    margin: 0;
    padding: 0;
}

.container{
    padding: 1rem 2rem;
}

/* création class utilitaire  pour une grille*/
.d-flex{
    display: flex;
    align-items: center;
    justify-content: space-between;
}

/* composent grille*/
.grid{
    display: flex;
    flex-wrap: wrap; /* La propriété flex-wrap indique si les éléments flexibles sont contraints à être disposés sur une seule ligne ou s'ils peuvent être affichés sur plusieurs lignes avec un retour automatique. */
    align-items: center;
    justify-content: center;
}
.grid__item{
    width: 100%;
}

/* syntaxe pour les grand écran  que si on dépasse ici les 750px.*/
@media screen and (min-width:750px) {
    .container{
        max-width: 1200px;
        margin: 0  auto; /* 0 en- haut et en-bas et auto à gauche et à droite */
        padding: 2rem; /* soit 2x10px = 20px */
        /*background: #148b30;*/
    }
}

/* ******************************************* Section **************************************** */ 

/* toutes les sections aurons un padding par default */
section{
    padding: 5.5rem 0;
}

/* ******************************************* Site ******************************************* */
header{
    /*margin: 3.4rem; /*soit 34px  */
    /*padding: 5.6rem;*/
    /*background: #fff;*/
    border-bottom: 2px dashed #eee; /* bordure que en-bas */
}

/* le parent et l'enfant pour + de précision mais surchage le code. */
.header .logo{
    font-family: 'poppins', sans-serif; /* famille d'écriture */
    font-size: 2rem;
    letter-spacing: 2px; /* espace entre les différentes lettres */
}

 /* fait disparaitre la navbar et les liens */ 
.navbar{
    display: none;
}

/* les <li> de la navbar */
.header li {
    display: inline-flex; /* en lignes et flexible */
    align-items: center;
    padding: 0 .5rem; /* .5rem on peut l'écrire aussi 0.5rem = 5px. */

}

.header a{
    color: #333;
}

/*pseudo classe*/
.header a:hover{
    color:red;
}

/* élément à droite */
.header .right{
    display: flex;
    align-items: center; /* alignement vertical */
}

.burger{
    background: none;
    border: none;
    width: 35px;
    height: 35px;
    cursor: pointer;
    position: relative;
    margin-left: 1rem; /* soit 10px */
}

.burger .bar{
    display: block;/* pour le faire apparaitre car le span n'est pas un block */
    width: 22px;
    height: 3px;
    background: #333;
}

/* pseudo classe pour créer les deux barres du burger*/
.burger .bar::before, .burger .bar::after {
    display: block;
    content: "";/* permet de l'afficher sinon il n'apparait pas */
    width: 22px;
    height: 3px;
    background: #333;
    position: absolute; /* permet de le sortir du flux */
}

/* barre burger haut*/
.burger .bar::before{
    transform: translateY(-8px);
}

/* barre burger bas*/
.burger .bar::after{
    transform: translateY(8px);
}

.socials{
    display: flex;
}

.socials a {
    padding: 0 2px;
}

/* les icons des réseaux sociaux */
.socials .icon{
    height: 20px;
}

/* ******************* Toujours mettre les max-width avec les min-width ******************* */
/* *** max-widht du + grand au + petit, alors que les min-widht sont du + petit au + grand *** */

/* script pour mobile seulement*/
@media screen and (max-width:749px) {

}

/* faire réapparaitre la Navbar si l'écran est supérieure à 750px*/
@media screen and (min-width:750px) {
    .navbar{
        display: flex;
    }
    /* fait disparaitre le burger */
    .burger{
        display: none;
    }
}


/* ************************** Héro ************************* */

.hero{
    background:#5b6c78;
    color: #fff;
    padding: 1rem 0 0 0;
}

.hero .title{
    color: inherit; /* hérite la couleur de son parent */
    font-size: 2.5rem;
    margin: 1.6rem 0 0 0;
}

.hero__item{
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    /*text-align: center;*/
}

.hero__item span{
    text-transform: uppercase;
    font-size: 2rem;
    margin: 2.5rem;
}

@media screen and (max-width:749px) {
    /* cibler une classe qui appartient à une classe en les collent. */
    .hero__item.left{
        order:2; /* utilisable uniquement avec le flex box */
    }

    .hero__item.right{
        order:1;
    }

    .hero .title{
        font-size: 3rem;
    }
}

@media screen and (min-width:750px) {
    /*La propriété flex-shrink définit le facteur de rétrécissement d'un élément flexible. Si la taille de l'ensemble des éléments flexibles est supérieure à la taille du conteneur, les éléments seront comprimés selon leur facteur flex-shrink. */
    .hero__item{
        flex:1 0 50%;
        /*align-items:flex-start;
        text-align: left;*/
    }

    .hero .title{
        font-size: 3.5rem;
        margin: 1.6rem 0 0 0;
    }

    .hero__avatar img{
        max-width: auto;
        max-height: auto;
        border-radius: 50%;
        justify-content: center;
        align-items: center;
    }
}

.toto{

}

@media screen and (min-width:750px) {

}

.img{
    max-width: 100%;
    height: auto;
}